// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TillApp.Infrastructure.Data;

#nullable disable

namespace TillApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TillApp.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TillApp.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemID"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("OrderItemID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("TillApp.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Name = "Coke",
                            Price = 2.20m
                        },
                        new
                        {
                            ProductID = 2,
                            Name = "Burger",
                            Price = 5.50m
                        },
                        new
                        {
                            ProductID = 3,
                            Name = "Fries",
                            Price = 2.80m
                        },
                        new
                        {
                            ProductID = 4,
                            Name = "Pizza",
                            Price = 7.50m
                        },
                        new
                        {
                            ProductID = 5,
                            Name = "Salad",
                            Price = 4.00m
                        },
                        new
                        {
                            ProductID = 6,
                            Name = "Water",
                            Price = 1.00m
                        },
                        new
                        {
                            ProductID = 7,
                            Name = "Juice",
                            Price = 2.50m
                        },
                        new
                        {
                            ProductID = 8,
                            Name = "Ice Cream",
                            Price = 3.00m
                        },
                        new
                        {
                            ProductID = 9,
                            Name = "Coffee",
                            Price = 1.80m
                        },
                        new
                        {
                            ProductID = 10,
                            Name = "Tea",
                            Price = 1.50m
                        });
                });

            modelBuilder.Entity("TillApp.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("TillApp.Domain.Entities.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TillApp.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
